setwd('C:/Users/Oli/Documents/PhD/wham/Model Calibration/Outputs 05112021')
Total     <- aperm(ncvar_get(nc_open("Boot_Total_03112021.nc"), "value"), c(2, 1, 3))
Arable    <- aperm(ncvar_get(nc_open("Boot_Arable_03112021.nc"), "value"), c(2, 1, 3))
Pasture   <- aperm(ncvar_get(nc_open("Boot_Pasture_03112021.nc"), "value"), c(2, 1, 3))
Vegetation<- aperm(ncvar_get(nc_open("Boot_Vegetation_03112021.nc"), "value"), c(2, 1, 3))
Arson     <- aperm(ncvar_get(nc_open("Boot_Arson_03112021.nc"), "value"), c(2, 1, 3))
Background<- aperm(ncvar_get(nc_open("Boot_Background_03112021.nc"), "value"), c(2, 1, 3))
setwd(paste0(base_dir, '/Land use/CMIP6'))
CMIP6_Cropland                 <- lapply(list.files(pattern = '*.tif')[c(1:3, 5, 6)], brick)
CMIP6_Cropland_2016            <- sum(brick(unlist(lapply(CMIP6_Cropland, function(x) x[[26]]))))
CMIP6_Cropland_1990            <- sum(brick(unlist(lapply(CMIP6_Cropland, function(x) x[[1]]))))
CMIP_Livestock                 <- lapply(list.files(pattern = '*.tif')[c(4, 9)], brick)
CMIP6_Livestock_2016           <- sum(brick(unlist(lapply(CMIP_Livestock, function(x) x[[26]]))))
CMIP6_Livestock_1990           <- sum(brick(unlist(lapply(CMIP_Livestock, function(x) x[[1]]))))
CMIP6_Forest                   <- lapply(c('primf_JULES.tif', 'secondary_forest_JULES.tif'), brick)
CMIP6_Forest                   <- lapply(1:nlayers(CMIP6_Forest[[1]]), function(i) {CMIP6_Forest[[1]][[i]] + CMIP6_Forest[[2]][[i]]})
CMIP6_Forest                   <- brick(unlist(CMIP6_Forest))
### Economic data
setwd(paste0(base_dir, '/Socio economic/GDP and HDI'))
HDI            <- brick('HDI_JULES.tif')
GDP            <- brick('GDP_JULES.tif')
setwd(paste0(base_dir, '/Climate/JULES biophysical/ET'))
ET             <- brick(unlist(lapply(list.files(), raster)))
setwd(paste0(base_dir, '/Socio economic/Population density'))
Population     <- brick(unlist(lapply(list.files(), raster)))
Continents.LC <- read.csv('C:/Users/Oli/Documents/PhD/Thesis/Draft content/ABM Fire/BA_Explanatoryvar_Continent.csv')
Continents.LC <- Continents.LC[, -c(6)]
colnames(Continents.LC)[5] <- 'BA_frac'
Continents.LC <- merge(Continents.LC, Continents.df,
by = c('Year', 'Continent', 'Type'), all.x = T)
library(plotly)
Continents.dat <- Continents.LC %>%
mutate(HDI_GDP = HDI*log(GDP)) %>%
mutate(Fire_dense = BA_frac/(LC_pc/100)) %>%
filter(Continent %in% c('Asia', 'South America', 'Africa'))
#plot_ly(x=Continents.df$Population, y=Continents.df$HDI_GDP, z=matrix(Continents.df[, c(10, 11, 12)]), type = 'surface')
fig <- plot_ly(Continents.dat, x = ~Population, y = ~HDI_GDP, z = ~Fire_dense, color = ~Continent)
fig <- fig %>% add_markers()
fig
ggplot(Continents.dat, aes(x = Population, y = Fire_dense, colour = Continent)) +
geom_point(size = 3) + theme_classic()
Continents.dat$HDI_GDP        <- Continents.dat$HDI * log(Continents.dat$GDP)
Continents.dat[, c(6:12, 14)] <- apply(Continents.dat[, c(6:12, 14)], 2, function(x) {x/max(x)})
Continents.dat %>% #filter(Type == 'Arable') %>%
mutate(Fire_dense = BA_frac/(LC_pc/100)) %>%
filter(Continent %in% c('Asia', 'South America', 'Africa')) %>%
pivot_longer(c('ET', 'HDI_GDP', 'Population'), names_to = 'Explanatory_name',
values_to = 'Explanatory variable') %>%
ggplot(aes(x = `Explanatory variable`, y = Fire_dense, colour = Continent)) +
geom_point(size = 3) + theme_classic() + xlab('Dimensionless explanatory variable (0-1)') +
facet_grid(Type~Explanatory_name, scales = 'free') +
ylab('Burned area %') + scale_colour_viridis_d() +
theme(text = element_text(size= 16))
Continents.dat$BA_LC <- Continents.dat$BA / (Continents.dat$LC_pc/100)
BA.tree <- tree(BA_LC ~ Population + HDI_GDP + factor(Type),
data = Continents.df[!Continents.df$Continent %in% c('Asia', 'Africa', 'South America'), ])
pred.df <- Continents.df[!Continents.df$Continent %in% c('Asia', 'Africa', 'South America'), ]
pred.df$prediction <- predict(BA.tree, pred.df)
1 - sum((pred.df$prediction-pred.df$BA_LC)^2)/sum((pred.df$BA_LC-mean(pred.df$BA_LC))^2)
plot(pred.df$prediction, pred.df$BA_LC)
abline(0, 1)
View(Continents.dat)
past_SA <- Continents.dat[Continents.dat$Continent == 'South America' & Continents.dat$Type == 'Pasture', ]
View(past_SA)
cor.test(past_SA$BA_LC, past_SA$GDP)
cor.test(past_SA$BA_LC, past_SA$HDI)
cor.test(past_SA$BA_LC, past_SA$HDI*log(past_SA$GDP))
past_SA <- Continents.dat[Continents.dat$Continent == 'Asia' & Continents.dat$Type == 'Arable', ]
past_SA <- Continents.dat[Continents.dat$Continent == 'Asia', ]
setwd('C:/Users/Oli/Documents/PhD/wham/Model Calibration/Escaped fire')
Esc_Total     <- aperm(ncvar_get(nc_open("Escaped_firev2.nc"), "value"), c(2, 1, 3))
Esc.rast      <- list()
for(i in 1:25) {
Esc.rast[[i]]<- raster(Esc_Total[, , i])
extent(Esc.rast[[i]]) <- c(-180, 180, -90, 90)
Esc.rast[[i]][JULES.mask <= 0] <- NA
}
igs.ts <- data.frame(Escaped_fires = unlist(lapply(Esc.rast ,
function(x) {mean((x)[], na.rm = T)})))
igs.ts$Year <- 1:25
igs.ts %>%
ggplot(aes(x = Year, y = Escaped_fires)) + geom_line(size = 1.5) +
theme_classic() + scale_colour_viridis_d() + ylab('Escaped fires') +
geom_smooth(method = "lm", se = F,linetype = 'dashed') +
theme(text = element_text(size = 18))
plot(Esc.rast[[25]])
plot(Esc.rast[[1]])
plot(Esc.rast[[25]] - Esc.rast[[1]])
View(igs.ts)
0.007163419 / 0.007461805
Continents.dat %>% #filter(Type == 'Arable') %>%
mutate(Fire_dense = BA_frac/(LC_pc/100)) %>%
filter(Continent %in% c('Asia', 'South America', 'Africa')) %>%
pivot_longer(c('ET', 'HDI_GDP', 'Population'), names_to = 'Explanatory_name',
values_to = 'Explanatory variable') %>%
ggplot(aes(x = `Explanatory variable`, y = Fire_dense, colour = Continent)) +
geom_point(size = 3) + theme_classic() + xlab('Dimensionless explanatory variable (0-1)') +
facet_grid(Type~Explanatory_name, scales = 'free') +
ylab('Burned area %') + scale_colour_viridis_d() +
theme(text = element_text(size= 16))
View(Continents.dat)
As.crop <- Continents.dat %>% filter(Continent == 'Asia' & Type == 'Arable')
As.crop
mean(As.crop$BA_LC
)
View(Continents.dat)
View(Continents.LC)
cont.total   <- list()
cont.arable  <- list()
cont.pasture <- list()
cont.veg     <- list()
for(i in 1:25) {
cont.total[[i]]  <- raster::extract(NT.rast[[i]] * Area.rast, continents, fun = sum, na.rm = T)
cont.arable[[i]] <- raster::extract(NA.rast[[i]] * Area.rast, continents, fun = sum, na.rm = T)
cont.pasture[[i]]<- raster::extract(NP.rast[[i]] * Area.rast, continents, fun = sum, na.rm = T)
cont.veg[[i]]    <- raster::extract(NV.rast[[i]] * Area.rast, continents, fun = sum, na.rm = T)
print(i)
}
cont.df           <- plyr::rbind.fill(lapply(cont.total, data.frame))
cont.df$Year      <- rep(1:25, each = 7)
cont.df$Continent <- rep(continents$CONTINENT, times = 25)
cont.df$Arable    <- plyr::rbind.fill(lapply(cont.arable, data.frame))[, 1]
cont.df$Pasture   <- plyr::rbind.fill(lapply(cont.pasture, data.frame))[, 1]
cont.df$Vegetation<- plyr::rbind.fill(lapply(cont.veg, data.frame))[, 1]
colnames(cont.df)[1] <- 'Total'
Continents.df <- cont.df %>%
mutate(No_arable = Total - Arable) %>%
pivot_longer(c('Total', 'No_arable','Arable', 'Pasture', 'Vegetation'),
names_to = 'Type', values_to = 'BA')
Continents.df$Type <- recode(Continents.df$Type, No_arable = 'No arable')
Continents.df %>%
filter(Continent %in% c('South America', 'Africa', 'Asia')) %>%
filter(Type %in% c('No arable', 'Total')) %>%
ggplot(aes(x= Year+1989, y = BA * 1e-04, colour = Continent)) +
geom_line(size = 1.5) + theme_classic() + scale_colour_viridis_d() +
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5)) +ylab('BA MHa') + xlab('Year') +
facet_grid(.~Type)# + geom_smooth(se = FALSE)
50/110
Past.dat <- Continents.dat[Continents.dat$Type == 'Pasture', ]
cor.test(Past.dat$BA_LC, Past.dat$Population)
hist(Past.dat$Population)
cor.test(Past.dat$BA_LC[Past.dat$Continent == 'Asia'], Past.dat$Population[Past.dat$Continent == 'Asia'])
cor.test(Past.dat$BA_LC[Past.dat$Continent == 'Africa'], Past.dat$Population[Past.dat$Continent == 'Africa'])
cor.test(Past.dat$BA_LC[Past.dat$Continent == 'South America'], Past.dat$Population[Past.dat$Continent == 'South America'])
setwd('C:/Users/Oli/Documents/PhD/wham/Model Calibration/Outputs 05112021')
Total     <- aperm(ncvar_get(nc_open("Boot_Total_03112021.nc"), "value"), c(2, 1, 3))
Arable    <- aperm(ncvar_get(nc_open("Boot_Arable_03112021.nc"), "value"), c(2, 1, 3))
Pasture   <- aperm(ncvar_get(nc_open("Boot_Pasture_03112021.nc"), "value"), c(2, 1, 3))
Vegetation<- aperm(ncvar_get(nc_open("Boot_Vegetation_03112021.nc"), "value"), c(2, 1, 3))
Arson     <- aperm(ncvar_get(nc_open("Boot_Arson_03112021.nc"), "value"), c(2, 1, 3))
Background<- aperm(ncvar_get(nc_open("Boot_Background_03112021.nc"), "value"), c(2, 1, 3))
NT.rast <- list()
NA.rast <- list()
NP.rast <- list()
NV.rast <- list()
Arson.rast      <- list()
Background.rast <- list()
for(i in 1:25) {
'
NT.rast[[i]]<- raster(Total[, , i])
extent(NT.rast[[i]]) <- c(-180, 180, -90, 90)
NT.rast[[i]][JULES.mask <= 0] <- NA
'
NA.rast[[i]]<- raster(Arable[, , i])
extent(NA.rast[[i]]) <- c(-180, 180, -90, 90)
NA.rast[[i]][JULES.mask <= 0] <- NA
NP.rast[[i]]<- raster(Pasture[, , i])
extent(NP.rast[[i]]) <- c(-180, 180, -90, 90)
NP.rast[[i]][JULES.mask <= 0] <- NA
'
NV.rast[[i]]<- raster(Vegetation[, , i])
extent(NV.rast[[i]]) <- c(-180, 180, -90, 90)
NV.rast[[i]][JULES.mask <= 0] <- NA
Arson.rast[[i]]<- raster(Arson[, , i])
extent(Arson.rast[[i]]) <- c(-180, 180, -90, 90)
Arson.rast[[i]][JULES.mask <= 0] <- NA
Background.rast[[i]]<- raster(Background[, , i])
extent(Background.rast[[i]]) <- c(-180, 180, -90, 90)
Background.rast[[i]][JULES.mask <= 0] <- NA
'
print(i)
}
plot(NA.rast[[1]])
plot(NA.rast[[2]])
plot(NA.rast[[3]])
plot(NA.rast[[25]])
plot(NP.rast[[1]])
plot(NP.rast[[25]])
plot(NP.rast[[2]])
plot(NP.rast[[1]])
plot(NP.rast[[2]])
setwd('C:\Users\Oli\Documents\PhD\wham\results')
setwd('C:/Users/Oli/Documents/PhD/wham/results')
list.files()
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_crb_0.nc"), "value"), c(2, 1, 3))
teg
dim(teg)
setwd('C:/Users/Oli/Documents/PhD/wham/results')
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_crb_0.nc"), "value"), c(2, 1, 3))
library(tidyverse)
library(raster)
library(viridis)
library(rgdal)
library(ncdf4)
library(rgdal)
setwd('C:/Users/Oli/Documents/PhD/wham/results')
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_crb_0.nc"), "value"), c(2, 1, 3))
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_crb_0.nc"), "value"), c(2, 1))
raster(te)
raster(teg)
plot(raster(teg))
setwd('C:/Users/Oli/Documents/PhD/wham/results')
list.files9
list.file()
list.files()
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_cfp_0.nc"), "value"), c(2, 1))
plot(raster(teg))
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_pasture_0.nc"), "value"), c(2, 1))
plot(raster(teg))
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_pyrome_0.nc"), "value"), c(2, 1))
plot(raster(teg))
teg    <- aperm(ncvar_get(nc_open("Escaped_fire_hg_0.nc"), "value"), c(2, 1))
plot(raster(teg))
library(tidyverse)
library(raster)
################################################################################################
### Prescribed inputs
################################################################################################
setwd('C:/Users/Oli/Documents/PhD/Model development/Data/Processed secondary/Merged with JULES')
JULES.mask         <- raster('JULES_Mask.tif')
extent(JULES.mask) <- c(-180, 180, -90, 90)
base_dir           <- getwd()
setwd(paste0(base_dir, '/Land use/CMIP6'))
CMIP6_Veg     <- lapply(list.files(pattern = '*.tif')[c(7, 8, 11, 12)], brick)
CMIP6_Veg     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Veg, function(x) x[[i]]))))})
CMIP6_Primary     <- lapply(list.files(pattern = '*.tif')[c(7, 8)], brick)
CMIP6_Primary     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Primary, function(x) x[[i]]))))})
setwd('C:/Users/Oli/Documents/PhD/Model development/Fire use/Ignitions')
Mean_fire <- read.csv('Mean_fire_matrix.csv')
Med_fire  <- read.csv('')
####################################################
### Define deforestation
####################################################
Defor             <- lapply(2:26, function(i) {CMIP6_Primary[[i]] - CMIP6_Primary[[i-1]]})
Defor             <- lapply(Defor, function(x) {
x[x > 0] <- 0
return(x)
})
#######################################################################################################
#### What takes it's place?
#######################################################################################################
### Cropland
CMIP6_Crop     <- lapply(list.files(pattern = '*.tif')[c(1:3, 5:6)], brick)
CMIP6_Crop     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Crop, function(x) x[[i]]))))})
Crop.expand             <- lapply(2:26, function(i) {CMIP6_Crop[[i]] - CMIP6_Crop[[i - 1]]})
Crop.expand             <- lapply(Crop.expand, function(x) {
x[x < 0] <- 0
return(x)
})
### Livestock
CMIP6_Pasture       <- lapply(list.files(pattern = '*.tif')[c(4)], brick)
CMIP6_Pasture     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Pasture, function(x) x[[i]]))))})
Pasture.expand             <- lapply(2:26, function(i) {CMIP6_Pasture[[i]] - CMIP6_Pasture[[i - 1]]})
Pasture.expand             <- lapply(Pasture.expand, function(x) {
x[x < 0] <- 0
return(x)
})
CMIP6_Rangeland       <- lapply(list.files(pattern = '*.tif')[c(9)], brick)
CMIP6_Rangeland       <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Rangeland, function(x) x[[i]]))))})
Rangeland.expand             <- lapply(2:26, function(i) {CMIP6_Rangeland[[i]] - CMIP6_Rangeland[[i - 1]]})
Rangeland.expand             <- lapply(Rangeland.expand, function(x) {
x[x < 0] <- 0
return(x)
})
setwd('C:/Users/Oli/Documents/PhD/Model development/Data/Processed secondary/Merged with JULES')
CMIP6_Crop     <- lapply(list.files(pattern = '*.tif')[c(1:3, 5:6)], brick)
list.files()
setwd(paste0(base_dir, '/Land use/CMIP6'))
list.files()
CMIP6_Crop     <- lapply(list.files(pattern = '*.tif')[c(1:3, 5:6)], brick)
CMIP6_Crop     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Crop, function(x) x[[i]]))))})
setwd('C:/Users/Oli/Documents/PhD/Model development/Fire use/Ignitions')
Mean_fire <- read.csv('Mean_fire_matrix.csv')
Med_fire  <- read.csv('Median_fire_matrix.csv')
Crop.expand             <- lapply(2:26, function(i) {CMIP6_Crop[[i]] - CMIP6_Crop[[i - 1]]})
Crop.expand             <- lapply(Crop.expand, function(x) {
x[x < 0] <- 0
return(x)
})
plot(Crop.expand[[1]])
plot(Crop.expand[[5]])
plot(Crop.expand[[26]])
plot(Crop.expand[[25]])
plot(Crop.expand[[21]])
plot(Crop.expand[[8]])
CMIP6_Pasture       <- lapply(list.files(pattern = '*.tif')[c(4)], brick)
setwd(paste0(base_dir, '/Land use/CMIP6'))
CMIP6_Pasture     <- lapply(list.files(pattern = '*.tif')[c(4)], brick)
CMIP6_Pasture     <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Pasture, function(x) x[[i]]))))})
warnings()
plot(CMIP6_Pasture[[1]])
plot(CMIP6_Pasture[[2]])
plot(CMIP6_Pasture[[25]])
Pasture.expand             <- lapply(2:26, function(i) {CMIP6_Pasture[[i]] - CMIP6_Pasture[[i - 1]]})
Pasture.expand             <- lapply(Pasture.expand, function(x) {
x[x < 0] <- 0
return(x)
})
CMIP6_Rangeland       <- lapply(list.files(pattern = '*.tif')[c(9)], brick)
CMIP6_Rangeland       <- lapply(1:26, function(i) {
sum(brick(unlist(lapply(CMIP6_Rangeland, function(x) x[[i]]))))})
Rangeland.expand             <- lapply(2:26, function(i) {CMIP6_Rangeland[[i]] - CMIP6_Rangeland[[i - 1]]})
Rangeland.expand             <- lapply(Rangeland.expand, function(x) {
x[x < 0] <- 0
return(x)
})
plot(Rangeland.expand[[1]])
setwd('C:/Users/Oli/Documents/PhD/Model development/AFT Distribution/Beta version/Combined model/maps/All years/Yaxis/2015')
Cropland.2016    <- brick("Cropland.tif")
Pasture.2016     <- brick("Pasture.tif")
Rangeland.2016   <- brick('Rangeland.tif')
setwd('C:/Users/Oli/Documents/PhD/Model development/AFT Distribution/Beta version/Combined model/maps/All years/Yaxis/1990')
Cropland.1990    <- brick("Cropland.tif")
Pasture.1990     <- brick("Pasture.tif")
Rangeland.1990   <- brick('Rangeland.tif')
### Split transitional cropping
setwd('C:/Users/Oli/Documents/PhD/Model development/AFT Distribution/Beta version/FDS subsplits/Outputs/Trans_crop')
Trans.1990  <- brick(unlist(lapply(list.files()[c(1, 3, 5)], raster)))
Trans.2016  <- brick(unlist(lapply(list.files()[c(2, 4, 6)], raster)))
Trans.dist <- list(Swidden = Cropland.2016$Cropland.1 *Trans.2016[[3]],
Subsistence = Cropland.2016$Cropland.2*Trans.2016[[2]],
Market = Cropland.2016$Cropland.2*Trans.2016[[1]])
Arable_AFTs.2016 <- list(Swidden = (Cropland.2016$Cropland.1 + Trans.dist$Swidden)*CMIP6_Crop[[26]],
Subsistence = (Trans.dist$Subsistence)*CMIP6_Crop[[26]],
Market = (Trans.dist$Market)*CMIP6_Crop[[26]],
Intensive = (Cropland.2016$Cropland.3)*CMIP6_Crop[[26]])
Livestock_AFTs.2016 <- list(Pastoralist = Rangeland.2016$Rangeland.1*CMIP6_Rangeland[[26]],
Extensive = Pasture.2016$Pasture.1*CMIP6_Pasture[[26]] + Rangeland.2016$Rangeland.2*CMIP6_Rangeland[[26]],
Intensive = Pasture.2016$Pasture.2*CMIP6_Pasture[[26]] + Rangeland.2016$Rangeland.3*CMIP6_Rangeland[[26]])
Arable_AFTs.1990 <- list(Swidden = (Cropland.1990$Cropland.1 + Trans.dist$Swidden)*CMIP6_Crop[[26]],
Subsistence = (Trans.dist$Subsistence)*CMIP6_Crop[[26]],
Market = (Trans.dist$Market)*CMIP6_Crop[[26]],
Intensive = (Cropland.1990$Cropland.3)*CMIP6_Crop[[26]])
Livestock_AFTs.1990 <- list(Pastoralist = Rangeland.1990$Rangeland.1*CMIP6_Rangeland[[26]],
Extensive = Pasture.1990$Pasture.1*CMIP6_Pasture[[26]] + Rangeland.1990$Rangeland.2*CMIP6_Rangeland[[26]],
Intensive = Pasture.1990$Pasture.2*CMIP6_Pasture[[26]] + Rangeland.1990$Rangeland.3*CMIP6_Rangeland[[26]])
Arable.defor     <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Arable.defor
plot(Arable.defor)
plot(Arable.defor > 0.01)
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]] + Rangeland.expand[[25]])))))
Livestock.all_defor<- (Livestock.defor*Livestock_AFTs.2016[[2]] * 84) + (Livestock.defor*Livestock_AFTs.2016[[3]]*31)
Livestock.igs      <- (Livestock.defor*Livestock_AFTs.2016[[2]] * 84 / Mean_fire$Livestock.farmer..Extensive[4]) +
(Livestock.defor*Livestock_AFTs.2016[[3]]*31 / Mean_fire$Livestock.farmer..Intensive[4])
All.defor.fire <- (Arable.all_defor + Livestock.all_defor)
Arable.all_defor <- (Arable.defor*Arable_AFTs.2016[[2]] * 84) + (Arable.defor*Arable_AFTs.2016[[3]]*31)
Arable.igs       <- (Arable.defor * (Arable_AFTs.2016[[2]]) * 84 / Mean_fire$Small.holder..arable..subsistence.[4]) +
(Arable.defor * Arable_AFTs.2016[[3]] * 84 / Mean_fire$Small.holder..arable..market.[4]) +
(Arable.defor*Arable_AFTs.2016[[4]]*31 / Mean_fire$Intensive.farmer[4])
All.defor.fire <- (Arable.all_defor + Livestock.all_defor)
All.defor.igs  <- Arable.igs + Livestock.igs
plot(Arable.all_defor)
Arable_AFTs.2016
Arable.defor
Arable_AFTs.2016
Arable_AFTs.2016[[2]]
defor_AFTs       <- Arable_AFTs.2016[[2]] + Arable_AFTs.2016[[3]] + Arable_AFTs.2016[[4]]
plot(defor_AFTs)
Arable.all_defor <- (Arable.defor*(Arable_AFTs.2016[[1]]/CMIP6_Crop[[26]]) * 100) +
(Arable.defor*(Arable_AFTs.2016[[2]]/CMIP6_Crop[[26]]) * 84) +
(Arable.defor*(Arable_AFTs.2016[[3]]/CMIP6_Crop[[26]])*84) +
(Arable.defor*(Arable_AFTs.2016[[4]]/CMIP6_Crop[[26]])*31)
plot(Arable.all_defor)
mean(Arable.all_defor[], na.rm = T)
Arable.defor     <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]] + Rangeland.expand[[25]])))))
plot((Arable.defor + Livestock.defor) > Defor[[25]])
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]])))))
plot((Arable.defor + Livestock.defor) > Defor[[25]])
Arable.defor     <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]])))))
plot((Arable.defor + Livestock.defor) > Defor[[25]])
plot(Arable.defor)
plot(Defor[[25]])
plot((Arable.defor + Livestock.defor) > abs(Defor[[25]]))
setwd(paste0(base_dir, '/Land use/CMIP6'))
list.files(pattern = '*.tif')[c(7, 8, 11, 12)]
setwd(paste0(base_dir, '/Land use/CMIP6'))
list.files()
Defor             <- lapply(2:26, function(i) {CMIP6_Veg[[i]] - CMIP6_Veg[[i-1]]})
Defor             <- lapply(Defor, function(x) {
x[x > 0] <- 0
return(x)
})
Arable.defor       <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]])))))
plot((Arable.defor + Livestock.defor) > abs(Defor[[25]]))
plot((Arable.defor + Livestock.defor) - abs(Defor[[25]]))
plot((Arable.defor + Livestock.defor) - abs(Defor[[25]]) > 0.005)
plot((Arable.defor + Livestock.defor) - abs(Defor[[25]]) > 0.001)
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]] + Rangeland.expand[[25]])))))
plot((Arable.defor + Livestock.defor) - abs(Defor[[25]]) > 0.005)
plot((Arable.defor + Livestock.defor) - abs(Defor[[25]]) > 0.001)
plot((Arable.defor + Livestock.defor)[], abs(Defor[[25]])[])
Total.defor        <- Arable.defor + Livestock.defor
Arable.defor[Total.defor > abs(Defor[[25]])] <- Arable.defor * (abs(Defor[[25]]) / Total.defor)
Arable.defor[Total.defor > abs(Defor[[25]])] <- Arable.defor[Total.defor > abs(Defor[[25]])] * (abs(Defor[[25]][Total.defor > abs(Defor[[25]])]) / Total.defor[Total.defor > abs(Defor[[25]])])
Arable.defor       <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]] + Rangeland.expand[[25]])))))
Total.defor        <- Arable.defor + Livestock.defor
Arable.defor[Total.defor > abs(Defor[[25]])] <- Arable.defor[Total.defor > abs(Defor[[25]])] * (abs(Defor[[25]][Total.defor > abs(Defor[[25]])]) / Total.defor[Total.defor > abs(Defor[[25]])])
plot(Arable.defor)
plot((Arable.defor + Livestock.defor)[], abs(Defor[[25]])[])
Livestock.defor[Total.defor > abs(Defor[[25]])] <- Livestock.defor[Total.defor > abs(Defor[[25]])] * (abs(Defor[[25]][Total.defor > abs(Defor[[25]])]) / Total.defor[Total.defor > abs(Defor[[25]])])
plot((Arable.defor + Livestock.defor)[], abs(Defor[[25]])[])
Arable.fire_defor <- (Arable.defor*(Arable_AFTs.2016[[1]]/CMIP6_Crop[[26]]) * 100) +
(Arable.defor*(Arable_AFTs.2016[[2]]/CMIP6_Crop[[26]]) * 84) +
(Arable.defor*(Arable_AFTs.2016[[3]]/CMIP6_Crop[[26]])*84) +
(Arable.defor*(Arable_AFTs.2016[[4]]/CMIP6_Crop[[26]])*31)
plot(Arable.fire_defor)
Arable.defor       <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]])))))
Total.defor                                  <- Arable.defor + Livestock.defor
Arable.defor[Total.defor > abs(Defor[[25]])] <- Arable.defor[Total.defor > abs(Defor[[25]])] * (abs(Defor[[25]][Total.defor > abs(Defor[[25]])]) / Total.defor[Total.defor > abs(Defor[[25]])])
Livestock.defor[Total.defor > abs(Defor[[25]])] <- Livestock.defor[Total.defor > abs(Defor[[25]])] * (abs(Defor[[25]][Total.defor > abs(Defor[[25]])]) / Total.defor[Total.defor > abs(Defor[[25]])])
Arable.fire_defor <- (Arable.defor*(Arable_AFTs.2016[[1]]/CMIP6_Crop[[26]]) * 100) +
(Arable.defor*(Arable_AFTs.2016[[2]]/CMIP6_Crop[[26]]) * 84) +
(Arable.defor*(Arable_AFTs.2016[[3]]/CMIP6_Crop[[26]])*84) +
(Arable.defor*(Arable_AFTs.2016[[4]]/CMIP6_Crop[[26]])*31)
plot(Arable.fire_defor)
Livestock.all_defor<- (Livestock.defor*(Livestock_AFTs.2016[[2]]/CMIP6_Pasture[[26]]) * 84) +
(Livestock.defor*(Livestock_AFTs.2016[[3]]/CMIP6_Pasture[[26]])*31)
plot(Livestock.all_defor)
Arable.defor       <- min(brick(unlist(list(abs(Defor[[25]]), Crop.expand[[25]]))))
Livestock.defor    <- min(brick(unlist(list(abs(Defor[[25]]), (Pasture.expand[[25]])))))
Total.defor                                  <- Arable.defor + Livestock.defor
plot(Total.defor)
Livestock_AFTs.1990 <- list(Pastoralist = Rangeland.1990$Rangeland.1*CMIP6_Rangeland[[26]],
Extensive = Pasture.1990$Pasture.1*CMIP6_Pasture[[26]],
Intensive = Pasture.1990$Pasture.2*CMIP6_Pasture[[26]])
Livestock.all_defor<- (Livestock.defor*(Livestock_AFTs.2016[[2]]/CMIP6_Pasture[[26]]) * 84) +
(Livestock.defor*(Livestock_AFTs.2016[[3]]/CMIP6_Pasture[[26]])*31)
Livestock_AFTs.1990 <- list(Pastoralist = Rangeland.1990$Rangeland.1*CMIP6_Rangeland[[26]],
Extensive = Pasture.1990$Pasture.1*CMIP6_Pasture[[26]],
Intensive = Pasture.1990$Pasture.2*CMIP6_Pasture[[26]])
Livestock.fire_defor<- (Livestock.defor*(Livestock_AFTs.2016[[2]]/CMIP6_Pasture[[26]]) * 84) +
(Livestock.defor*(Livestock_AFTs.2016[[3]]/CMIP6_Pasture[[26]])*31)
pot(Livestock.fire_defor)
plot(Livestock.fire_defor)
Livestock_AFTs.2016[[2]]
plot(Livestock_AFTs.2016)
plot(Livestock_AFTs.2016[[2]])
plot(CMIP6_Pasture[[26]])
Livestock_AFTs.2016 <- list(Pastoralist = Rangeland.2016$Rangeland.1*CMIP6_Rangeland[[26]],
Extensive = Pasture.2016$Pasture.1*CMIP6_Pasture[[26]],
Intensive = Pasture.2016$Pasture.2*CMIP6_Pasture[[26]])
Livestock.fire_defor<- (Livestock.defor*(Livestock_AFTs.2016[[2]]/CMIP6_Pasture[[26]]) * 84) +
(Livestock.defor*(Livestock_AFTs.2016[[3]]/CMIP6_Pasture[[26]])*31)
plot(Livestock.fire_defor)
plot(Livestock.fire_defor + Arable.fire_defor)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.01)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.1)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.5)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.25)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.2)
plot((Livestock.fire_defor + Arable.fire_defor) > 0.5)
Arable.defor    <- list()
Livestock.defor <- list()
for(i in 2:26) {
Arable.defor[[i]]       <- min(brick(unlist(list(abs(Defor[[i-1]]), Crop.expand[[i]]))))
Livestock.defor[[i]]    <- min(brick(unlist(list(abs(Defor[[i-1]]), (Pasture.expand[[i]])))))
Total.defor                                           <- Arable.defor[[i]] + Livestock.defor[[i]]
Arable.defor[[i]][Total.defor > abs(Defor[[i-1]])]    <- Arable.defor[[i]][Total.defor > abs(Defor[[i-1]])] * (abs(Defor[[i-1]][Total.defor > abs(Defor[[i-1]])]) / Total.defor[Total.defor > abs(Defor[[i-1]])])
Livestock.defor[[i]][Total.defor > abs(Defor[[i-1]])] <- Livestock.defor[[i]][Total.defor > abs(Defor[[i-1]])] * (abs(Defor[[i-1]][Total.defor > abs(Defor[[i-1]])]) / Total.defor[Total.defor > abs(Defor[[i-1]])])
}
i
Arable.defor
Crop.expand
Arable.defor[[1]]    <- Arable.defor[[2]]
Livestock.defor[[1]] <- Livestock.defor[[2]]
plot(unlist(lapply(Livestock.defor, function(x) {mean(x[], na.rm = T)})))
plot(unlist(lapply(Arable.defor, function(x) {mean(x[], na.rm = T)})))
plot(Arable.defor[[1]])
plot(Arable.defor[[2]])
plot(Arable.defor[[5]])
getwd()
setwd('C:/Users/Oli/Documents/PhD/Model development/Fire use/Deforestation/Base deforestation maps')
writeRaster(brick(unlist(Arable.defor)), 'Arable_deforestation.nc', format = "CDF")
writeRaster(brick(unlist(Livestock.defor)), 'Livestock_deforestation.nc', format = "CDF")
getwd()
Arable.fire_defor
Total.defor
Arable.defor
Arable.fire_defor
Pasture.fire_defor
Livestock.fire_defor
Total.fire <- Livestock.fire_defor + Arable.fire_defor
plot(Total.fire)
Total.fire <- Total.fire[]
Total.fire <- data.frame(Total.fire)
setwd('C:/Users/Oli/Documents/PhD/wham/tests/test_data/R_outputs')
list.files()
write.csv('Deforestaiton_2014.csv')
write.csv(Total.fire, 'Deforestaiton_2014.csv')
